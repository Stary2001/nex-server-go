// This file is autogenerated.
// I apologise in advance.
package protocols
import (
	NEX "github.com/Stary2001/nex-go"
	)
func Account_Management_CreateAccount(client *NEX.Client, StrPrincipalName string, StrKey string, UiGroups uint32, StrEmail string) (rmcResult uint32, returnValue NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Account_Management_DeleteAccount(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_DisableAccount(client *NEX.Client, IdPrincipal NEX.PID, DtUntil NEX.DateTime, StrMessage string) (rmcResult uint32, returnValue NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Account_Management_ChangePassword(client *NEX.Client, StrNewKey string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Account_Management_TestCapability(client *NEX.Client, UiCapability uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetName(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, StrName string) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetAccountData(client *NEX.Client) (rmcResult uint32, returnValue uint32, OAccountData NEX.AccountData) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetPrivateData(client *NEX.Client) (rmcResult uint32, returnValue bool, OData NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetPublicData(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, returnValue bool, OData NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetMultiplePublicData(client *NEX.Client, LstPrincipals []NEX.PID) (rmcResult uint32, returnValue bool, OData []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateAccountName(client *NEX.Client, StrName string) (rmcResult uint32, returnValue NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateAccountEmail(client *NEX.Client, StrName string) (rmcResult uint32, returnValue NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateCustomData(client *NEX.Client, OPublicData NEX.Data, OPrivateData NEX.Data) (rmcResult uint32, returnValue NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Account_Management_FindByNameRegex(client *NEX.Client, UiGroups uint32, StrRegex string, ResultRange NEX.ResultRange) (rmcResult uint32, PlstAccounts []NEX.BasicAccountInfo) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateAccountExpiryDate(client *NEX.Client, IdPrincipal NEX.PID, DtExpiry NEX.DateTime, StrExpiredMessage string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateAccountEffectiveDate(client *NEX.Client, IdPrincipal NEX.PID, DtEffectiveFrom NEX.DateTime, StrNotEffectiveMessage string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateStatus(client *NEX.Client, StrStatus string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetStatus(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, StrStatus string) {
    rmcResult = 0x80010002
    return
}
func Account_Management_GetLastConnectionStats(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, DtLastSessionLogin NEX.DateTime, DtLastSessionLogout NEX.DateTime, DtCurrentSessionLogin NEX.DateTime) {
    rmcResult = 0x80010002
    return
}
func Account_Management_ResetPassword(client *NEX.Client) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Account_Management_CreateAccountWithCustomData(client *NEX.Client, StrPrincipalName string, StrKey string, UiGroups uint32, StrEmail string, OPublicData NEX.Data, OPrivateData NEX.Data) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_RetrieveAccount(client *NEX.Client) (rmcResult uint32, OAccountData NEX.AccountData, OPublicData NEX.Data, OPrivateData NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Account_Management_UpdateAccount(client *NEX.Client, StrKey string, StrEmail string, OPublicData NEX.Data, OPrivateData NEX.Data) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_ChangePasswordByGuest(client *NEX.Client, StrPrincipalName string, StrEmail string, StrKey string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Account_Management_FindByNameLike(client *NEX.Client, UiGroups uint32, StrLike string, ResultRange NEX.ResultRange) (rmcResult uint32, PlstAccounts []NEX.BasicAccountInfo) {
    rmcResult = 0x80010002
    return
}
func Account_Management_CustomCreateAccount(client *NEX.Client, StrPrincipalName string, StrKey string, UiGroups uint32, StrEmail string, OAuthData NEX.Data) (rmcResult uint32, Pid NEX.PID) {
    rmcResult = 0x80010002
    return
}
/*func Account_Management_NintendoCreateAccount(client *NEX.Client, StrPrincipalName string, StrKey string, UiGroups uint32, StrEmail string, OAuthData NEX.Data) (rmcResult uint32, Pid NEX.PID, PidHMAC string) {
    rmcResult = 0x80010002
    return
}*/
func Account_Management_LookupOrCreateAccount(client *NEX.Client, StrPrincipalName string, StrKey string, UiGroups uint32, StrEmail string, OAuthData NEX.Data) (rmcResult uint32, Pid NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Account_Management_DisconnectPrincipal(client *NEX.Client, IdPrincipal NEX.PID) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Account_Management_DisconnectAllPrincipals(client *NEX.Client) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
/*func Authentication_Login(client *NEX.Client, StrUserName string) (rmcResult uint32, returnValue NEX.Result, PidPrincipal NEX.PID, PbufResponse NEX.Buffer, PConnectionData NEX.RVConnectionData, StrReturnMsg string) {
    rmcResult = 0x80010002
    return
}
func Authentication_LoginEx(client *NEX.Client, StrUserName string, OExtraData NEX.Data) (rmcResult uint32, returnValue NEX.Result, PidPrincipal NEX.PID, PbufResponse NEX.Buffer, PConnectionData NEX.RVConnectionData, StrReturnMsg string, PSourceKey string) {
    rmcResult = 0x80010002
    return
}
func Authentication_RequestTicket(client *NEX.Client, IdSource NEX.PID, IdTarget NEX.PID) (rmcResult uint32, returnValue NEX.Result, BufResponse NEX.Buffer) {
    rmcResult = 0x80010002
    return
}
func Authentication_GetPID(client *NEX.Client, StrUserName string) (rmcResult uint32, returnValue NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Authentication_GetName(client *NEX.Client, Id NEX.PID) (rmcResult uint32, returnValue string) {
    rmcResult = 0x80010002
    return
}
func Authentication_LoginWithContext(client *NEX.Client, LoginData NEX.Data) (rmcResult uint32, returnValue NEX.Result, PidPrincipal NEX.PID, PbufResponse NEX.Buffer, PConnectionData NEX.RVConnectionData) {
    rmcResult = 0x80010002
    return
}*/
func Data_Store_PrepareGetObjectV1(client *NEX.Client, Param NEX.DataStorePrepareGetParamV1) (rmcResult uint32, PReqGetInfo NEX.DataStoreReqGetInfoV1) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PreparePostObjectV1(client *NEX.Client, Param NEX.DataStorePreparePostParamV1) (rmcResult uint32, PReqPostInfo NEX.DataStoreReqPostInfoV1) {
    rmcResult = 0x80010002
    return
}
func Data_Store_CompletePostObjectV1(client *NEX.Client, Param NEX.DataStoreCompletePostParamV1) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_DeleteObject(client *NEX.Client, Param NEX.DataStoreDeleteParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_DeleteObjects(client *NEX.Client, Params []NEX.DataStoreDeleteParam, Transactional bool) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ChangeMetaV1(client *NEX.Client, Param NEX.DataStoreChangeMetaParamV1) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ChangeMetasV1(client *NEX.Client, DataIds []uint64, Params []NEX.DataStoreChangeMetaParamV1, Transactional bool) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetMeta(client *NEX.Client, Param NEX.DataStoreGetMetaParam) (rmcResult uint32, PMetaInfo NEX.DataStoreMetaInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetMetas(client *NEX.Client, DataIds []uint64, Param NEX.DataStoreGetMetaParam) (rmcResult uint32, PMetaInfo []NEX.DataStoreMetaInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PrepareUpdateObject(client *NEX.Client, Param NEX.DataStorePrepareUpdateParam) (rmcResult uint32, PReqUpdateInfo NEX.DataStoreReqUpdateInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_CompleteUpdateObject(client *NEX.Client, Param NEX.DataStoreCompleteUpdateParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_SearchObject(client *NEX.Client, Param NEX.DataStoreSearchParam) (rmcResult uint32, PSearchResult NEX.DataStoreSearchResult) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetNotificationUrl(client *NEX.Client, Param NEX.DataStoreGetNotificationUrlParam) (rmcResult uint32, Info NEX.DataStoreReqGetNotificationUrlInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetNewArrivedNotificationsV1(client *NEX.Client, Param NEX.DataStoreGetNewArrivedNotificationsParam) (rmcResult uint32, PResult []NEX.DataStoreNotificationV1, PHasNext bool) {
    rmcResult = 0x80010002
    return
}
func Data_Store_RateObject(client *NEX.Client, Target NEX.DataStoreRatingTarget, Param NEX.DataStoreRateObjectParam, FetchRatings bool) (rmcResult uint32, PRating NEX.DataStoreRatingInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetRating(client *NEX.Client, Target NEX.DataStoreRatingTarget, AccessPassword uint64) (rmcResult uint32, PRating NEX.DataStoreRatingInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetRatings(client *NEX.Client, DataIds []uint64, AccessPassword uint64) (rmcResult uint32, PRatings [][]NEX.DataStoreRatingInfoWithSlot, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ResetRating(client *NEX.Client, Target NEX.DataStoreRatingTarget, UpdatePassword uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ResetRatings(client *NEX.Client, DataIds []uint64, Transactional bool) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetSpecificMetaV1(client *NEX.Client, Param NEX.DataStoreGetSpecificMetaParamV1) (rmcResult uint32, PMetaInfos []NEX.DataStoreSpecificMetaInfoV1) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PostMetaBinary(client *NEX.Client, Param NEX.DataStorePreparePostParam) (rmcResult uint32, DataId uint64) {
    rmcResult = 0x80010002
    return
}
func Data_Store_TouchObject(client *NEX.Client, Param NEX.DataStoreTouchObjectParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetRatingWithLog(client *NEX.Client, Target NEX.DataStoreRatingTarget, AccessPassword uint64) (rmcResult uint32, PRating NEX.DataStoreRatingInfo, PRatingLog NEX.DataStoreRatingLog) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PreparePostObject(client *NEX.Client, Param NEX.DataStorePreparePostParam) (rmcResult uint32, PReqPostInfo NEX.DataStoreReqPostInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PrepareGetObject(client *NEX.Client, Param NEX.DataStorePrepareGetParam) (rmcResult uint32, PReqGetInfo NEX.DataStoreReqGetInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_CompletePostObject(client *NEX.Client, Param NEX.DataStoreCompletePostParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetNewArrivedNotifications(client *NEX.Client, Param NEX.DataStoreGetNewArrivedNotificationsParam) (rmcResult uint32, PResult []NEX.DataStoreNotification, PHasNext bool) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetSpecificMeta(client *NEX.Client, Param NEX.DataStoreGetSpecificMetaParam) (rmcResult uint32, PMetaInfos []NEX.DataStoreSpecificMetaInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetPersistenceInfo(client *NEX.Client, OwnerId NEX.PID, PersistenceSlotId uint16) (rmcResult uint32, PPersistenceInfo NEX.DataStorePersistenceInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetPersistenceInfos(client *NEX.Client, OwnerId NEX.PID, PersistenceSlotIds []uint16) (rmcResult uint32, PPersistenceInfo []NEX.DataStorePersistenceInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PerpetuateObject(client *NEX.Client, PersistenceSlotId uint16, DataId uint64, DeleteLastObject bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_UnperpetuateObject(client *NEX.Client, PersistenceSlotId uint16, DeleteLastObject bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PrepareGetObjectOrMetaBinary(client *NEX.Client, Param NEX.DataStorePrepareGetParam) (rmcResult uint32, PReqGetInfo NEX.DataStoreReqGetInfo, PReqGetAdditionalMeta NEX.DataStoreReqGetAdditionalMeta) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetPasswordInfo(client *NEX.Client, DataId uint64) (rmcResult uint32, PPasswordInfo NEX.DataStorePasswordInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetPasswordInfos(client *NEX.Client, DataIds []uint64) (rmcResult uint32, PPasswordInfos []NEX.DataStorePasswordInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetMetasMultipleParam(client *NEX.Client, Params []NEX.DataStoreGetMetaParam) (rmcResult uint32, PMetaInfo []NEX.DataStoreMetaInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_CompletePostObjects(client *NEX.Client, DataIds []uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ChangeMeta(client *NEX.Client, Param NEX.DataStoreChangeMetaParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ChangeMetas(client *NEX.Client, DataIds []uint64, Params []NEX.DataStoreChangeMetaParam, Transactional bool) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_RateObjects(client *NEX.Client, Targets []NEX.DataStoreRatingTarget, Params []NEX.DataStoreRateObjectParam, Transactional bool, FetchRatings bool) (rmcResult uint32, PRatings []NEX.DataStoreRatingInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PostMetaBinaryWithDataId(client *NEX.Client, DataId uint64, Param NEX.DataStorePreparePostParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_PostMetaBinariesWithDataId(client *NEX.Client, DataIds []uint64, Params []NEX.DataStorePreparePostParam, Transactional bool) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_RateObjectWithPosting(client *NEX.Client, Target NEX.DataStoreRatingTarget, RateParam NEX.DataStoreRateObjectParam, PostParam NEX.DataStorePreparePostParam, FetchRatings bool) (rmcResult uint32, PRating NEX.DataStoreRatingInfo) {
    rmcResult = 0x80010002
    return
}
func Data_Store_RateObjectsWithPosting(client *NEX.Client, Targets []NEX.DataStoreRatingTarget, RateParams []NEX.DataStoreRateObjectParam, PostParams []NEX.DataStorePreparePostParam, Transactional bool, FetchRatings bool) (rmcResult uint32, PRatings []NEX.DataStoreRatingInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetObjectInfos(client *NEX.Client, DataIds []uint64) (rmcResult uint32, PInfos []NEX.DataStoreReqGetInfo, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_SearchObjectLight(client *NEX.Client, Param NEX.DataStoreSearchParam) (rmcResult uint32, PSearchResult NEX.DataStoreSearchResult) {
    rmcResult = 0x80010002
    return
}
func Data_Store_AddToBufferQueue(client *NEX.Client, Param NEX.BufferQueueParam, Buffer NEX.QBuffer) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Data_Store_AddToBufferQueues(client *NEX.Client, Params []NEX.BufferQueueParam, Buffers []NEX.QBuffer) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetBufferQueue(client *NEX.Client, Param NEX.BufferQueueParam) (rmcResult uint32, PBufferQueue []NEX.QBuffer) {
    rmcResult = 0x80010002
    return
}
func Data_Store_GetBufferQueues(client *NEX.Client, Params []NEX.BufferQueueParam) (rmcResult uint32, PBufferQueueLst [][]NEX.QBuffer, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_ClearBufferQueues(client *NEX.Client, Params []NEX.BufferQueueParam) (rmcResult uint32, PResults []NEX.Result) {
    rmcResult = 0x80010002
    return
}
func Data_Store_SearchBalloon(client *NEX.Client, Param NEX.DataStoreSearchBalloonParam) (rmcResult uint32, PResults []NEX.DataStoreSearchBalloonResultSet) {
    rmcResult = 0x80010002
    return
}
func Data_Store_FetchMyInfos(client *NEX.Client, Patam NEX.DataStoreFetchMyInfosParam) (rmcResult uint32, PResult NEX.DataStoreFetchMyInfosResult) {
    rmcResult = 0x80010002
    return
}
func Friends_AddFriend(client *NEX.Client, UiPlayer uint32, UiDetails uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_AddFriendByName(client *NEX.Client, StrPlayerName string, UiDetails uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_AddFriendWithDetails(client *NEX.Client, UiPlayer uint32, UiDetails uint32, StrMessage string) (rmcResult uint32, RelationshipData NEX.RelationshipData) {
    rmcResult = 0x80010002
    return
}
func Friends_AddFriendByNameWithDetails(client *NEX.Client, UiPlayer uint32, UiDetails uint32, StrMessage string) (rmcResult uint32, RelationshipData NEX.RelationshipData) {
    rmcResult = 0x80010002
    return
}
func Friends_AcceptFriendship(client *NEX.Client, UiPlayer uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_DeclineFriendship(client *NEX.Client, UiPlayer uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_BlackList(client *NEX.Client, UiPlayer uint32, UiDetails uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_BlackListByName(client *NEX.Client, StrPlayerName string, UiDetails uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_ClearRelationship(client *NEX.Client, UiPlayer uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_UpdateDetails(client *NEX.Client, UiPlayer uint32, UiDetails uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Friends_GetList(client *NEX.Client, ByRelationship uint8, BReversed bool) (rmcResult uint32, LstFriendsList []uint32) {
    rmcResult = 0x80010002
    return
}
func Friends_GetDetailedList(client *NEX.Client, ByRelationship uint8, BReversed bool) (rmcResult uint32, LstFriendsList []NEX.FriendData) {
    rmcResult = 0x80010002
    return
}
func Friends_GetRelationships(client *NEX.Client, ResultRange NEX.ResultRange) (rmcResult uint32, UiTotalCount uint32, LstRelationshipsList []NEX.RelationshipData) {
    rmcResult = 0x80010002
    return
}
/*func Friends_3DS_UpdateProfile(client *NEX.Client, ProfileData NEX.MyProfile) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdateMii(client *NEX.Client, Mii NEX.Mii) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdateMiiList(client *NEX.Client, MiiList NEX.MiiList) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdatePlayedGames(client *NEX.Client, PlayedGames []NEX.PlayedGame) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdatePreference(client *NEX.Client, Unknown bool, Unknown2 bool, Unknown3 bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendMii(client *NEX.Client, Friends []NEX.FriendMiiRequest) (rmcResult uint32, Miis []NEX.FriendMii) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendMiiList(client *NEX.Client, Friends []NEX.FriendMiiRequest) (rmcResult uint32, MiiLists []NEX.FriendMiiList) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendRelationships(client *NEX.Client, Unknown []uint32) (rmcResult uint32, FriendRelationships []NEX.FriendRelationship) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_AddFriendByPrincipalID(client *NEX.Client, Unknown uint64, PrincipalId uint32) (rmcResult uint32, FriendRelationship NEX.FriendRelationship) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetAllFriends(client *NEX.Client) (rmcResult uint32, FriendRelationships []NEX.FriendRelationship) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_SyncFriend(client *NEX.Client, Unknown uint64, Unknown2 []uint32, Unknown3 []uint64) (rmcResult uint32, FriendList []NEX.FriendRelationship) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdatePresence(client *NEX.Client, PresenceInfo NEX.NintendoPresence, Unknown bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdateFavoriteGameKey(client *NEX.Client, GameKey NEX.GameKey) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_UpdateComment(client *NEX.Client, Comment string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendPresence(client *NEX.Client, Unknown []uint32) (rmcResult uint32, FriendPresenceList []NEX.FriendPresence) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendPicture(client *NEX.Client, Unknown []uint32) (rmcResult uint32, FriendPictures []NEX.FriendPicture) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_GetFriendPersistentInfo(client *NEX.Client, Unknown []uint32) (rmcResult uint32, PersistentInfo []NEX.FriendPersistentInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_3DS_SendInvitation(client *NEX.Client, Unknown []uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}*/
/*func Friends_Wii_U_GetAllInformation(client *NEX.Client, NNAInfo NEX.NNAInfo, NintendoPresence NEX.NintendoPresenceV2, Birthday NEX.DateTime) (rmcResult uint32, PrincipalPreference NEX.PrincipalPreference, StatusMessage NEX.Comment, FriendList []NEX.FriendInfo, SentFriendRequests []NEX.FriendRequest, ReceivedFriendRequests []NEX.FriendRequest, Blacklist []NEX.BlacklistedPrincipal, Unknown bool, Notifications []NEX.PersistentNotification, Unknown2 bool) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_AddFriend(client *NEX.Client, Pid NEX.PID) (rmcResult uint32, FriendRequest NEX.FriendRequest, FriendInfo NEX.FriendInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_AddFriendByName(client *NEX.Client, Name string) (rmcResult uint32, FriendRequest NEX.FriendRequest, FriendInfo NEX.FriendInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_RemoveFriend(client *NEX.Client, Pid NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_AddFriendRequest(client *NEX.Client, Unknown uint32, Unknown2 uint8, Unknown3 string, Unknown4 uint8, Unknown5 string, GameKey NEX.GameKey, Unknown6 NEX.DateTime) (rmcResult uint32, FriendRequest NEX.FriendRequest, FriendInfo NEX.FriendInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_CancelFriendRequest(client *NEX.Client, Id uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_AcceptFriendRequest(client *NEX.Client, Id uint64) (rmcResult uint32, FriendInfo NEX.FriendInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_DeleteFriendRequest(client *NEX.Client, Id uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_DenyFriendRequest(client *NEX.Client, Id uint64) (rmcResult uint32, BlacklistedPrincipal NEX.BlacklistedPrincipal) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_MarkFriendRequestsAsReceived(client *NEX.Client, FriendRequests []uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_AddBlackList(client *NEX.Client, BlacklistedPrincipal NEX.BlacklistedPrincipal) (rmcResult uint32, BlacklistedPrincipal NEX.BlacklistedPrincipal) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_RemoveBlackList(client *NEX.Client, Pid NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_UpdatePresence(client *NEX.Client, NintendoPresence NEX.NintendoPresenceV2) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_UpdateMii(client *NEX.Client, Mii NEX.MiiV2) (rmcResult uint32, Unknown NEX.DateTime) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_UpdateComment(client *NEX.Client, StatusMessage NEX.Comment) (rmcResult uint32, Unknown NEX.DateTime) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_UpdatePreference(client *NEX.Client, PrincipalPreferenc NEX.PrincipalPreference) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_GetBasicInfo(client *NEX.Client, Pids []NEX.PID) (rmcResult uint32, Infos []NEX.PrincipalBasicInfo) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_DeleteFriendFlags(client *NEX.Client, Unknown []NEX.PersistentNotification) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_CheckSettingStatus(client *NEX.Client) (rmcResult uint32, Unknown uint8) {
    rmcResult = 0x80010002
    return
}
func Friends_Wii_U_GetRequestBlockSettings(client *NEX.Client, Unknown []uint32) (rmcResult uint32, Settings []NEX.PrincipalRequestBlockSetting) {
    rmcResult = 0x80010002
    return
}*/
func Match_Making_RegisterGathering(client *NEX.Client, AnyGathering NEX.Data) (rmcResult uint32, returnValue uint32) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UnregisterGathering(client *NEX.Client, IdGathering uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UnregisterGatherings(client *NEX.Client, LstGatherings []uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UpdateGathering(client *NEX.Client, AnyGathering NEX.Data) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Invite(client *NEX.Client, IdGathering uint32, LstPrincipals []NEX.PID, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_AcceptInvitation(client *NEX.Client, IdGathering uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_DeclineInvitation(client *NEX.Client, IdGathering uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_CancelInvitation(client *NEX.Client, IdGathering uint32, LstPrincipals []NEX.PID, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetInvitationsSent(client *NEX.Client, IdGathering uint32) (rmcResult uint32, LstInvitations []NEX.Invitation) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetInvitationsReceived(client *NEX.Client) (rmcResult uint32, LstInvitations []NEX.Invitation) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Participate(client *NEX.Client, IdGathering uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_CancelParticipation(client *NEX.Client, IdGathering uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetParticipants(client *NEX.Client, IdGathering uint32) (rmcResult uint32, LstParticipants []NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Match_Making_AddParticipants(client *NEX.Client, IdGathering uint32, LstParticipants []NEX.PID, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetDetailedParticipants(client *NEX.Client, IdGathering uint32) (rmcResult uint32, LstParticipants []NEX.ParticipantDetails) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetParticipantsURLs(client *NEX.Client, IdGathering uint32) (rmcResult uint32, LstStationURL []NEX.StationURL) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByType(client *NEX.Client, StrType string, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByDescription(client *NEX.Client, StrDescription string, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByDescriptionRegex(client *NEX.Client, StrDescriptionRegex string, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByID(client *NEX.Client, LstID []uint32) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindBySingleID(client *NEX.Client, Id uint32) (rmcResult uint32, BResult bool, PGathering NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByOwner(client *NEX.Client, Id NEX.PID, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByParticipants(client *NEX.Client, Pid []NEX.PID) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindInvitations(client *NEX.Client, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindBySQLQuery(client *NEX.Client, StrQuery string, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_LaunchSession(client *NEX.Client, IdGathering uint32, StrURL string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UpdateSessionURL(client *NEX.Client, IdGathering uint32, StrURL string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetSessionURL(client *NEX.Client, IdGathering uint32) (rmcResult uint32, returnValue bool, StrURL string) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetState(client *NEX.Client, IdGathering uint32) (rmcResult uint32, returnValue bool, UiState uint32) {
    rmcResult = 0x80010002
    return
}
func Match_Making_SetState(client *NEX.Client, IdGathering uint32, UiNewState uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_ReportStats(client *NEX.Client, IdGathering uint32, LstStats []NEX.GatheringStats) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetStats(client *NEX.Client, IdGathering uint32, LstParticipants []uint32, LstColumns []uint8) (rmcResult uint32, returnValue bool, PlstStats []NEX.GatheringStats) {
    rmcResult = 0x80010002
    return
}
func Match_Making_DeleteGathering(client *NEX.Client, Gid uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetPendingDeletions(client *NEX.Client, UiReason uint32, ResultRange NEX.ResultRange) (rmcResult uint32, returnValue bool, LstDeletions []NEX.DeletionEntry) {
    rmcResult = 0x80010002
    return
}
func Match_Making_DeleteFromDeletions(client *NEX.Client, LstDeletions []uint32) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_MigrateGatheringOwnershipV1(client *NEX.Client, Gid uint32, LstPotentialNewOwnersID []NEX.PID) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_FindByDescriptionLike(client *NEX.Client, StrDescriptionLike string, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Match_Making_RegisterLocalURL(client *NEX.Client, Gid uint32, Url NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Match_Making_RegisterLocalURLs(client *NEX.Client, Gid uint32, LstUrls []NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UpdateSessionHostV1(client *NEX.Client, Gid uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Match_Making_GetSessionURLs(client *NEX.Client, Gid uint32) (rmcResult uint32, LstURLs []NEX.StationURL) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UpdateSessionHost(client *NEX.Client, Gid uint32, IsMigrateOwner bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Match_Making_UpdateGatheringOwnership(client *NEX.Client, Gid uint32, ParticipantsOnly bool) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_MigrateGatheringOwnership(client *NEX.Client, Gid uint32, LstPotentialNewOwnersID []NEX.PID, ParticipantsOnly bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_EndParticipation(client *NEX.Client, IdGathering uint32, StrMessage string) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_GetParticipants(client *NEX.Client, IdGathering uint32, BOnlyActive bool) (rmcResult uint32, LstParticipants []NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_GetDetailedParticipants(client *NEX.Client, IdGathering uint32, BOnlyActiv bool) (rmcResult uint32, LstParticipants []NEX.ParticipantDetails) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_GetParticipantsURLs(client *NEX.Client, LstGatherings []uint32) (rmcResult uint32, LstGatheringURLs []NEX.GatheringURLs) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_GetGatheringRelations(client *NEX.Client, Id uint32, Descr string) (rmcResult uint32, returnValue string) {
    rmcResult = 0x80010002
    return
}
func Match_Making_Ext_DeleteFromDeletions(client *NEX.Client, LstDeletions []uint32, Pid NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_CloseParticipation(client *NEX.Client, Gid uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_OpenParticipation(client *NEX.Client, Gid uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_AutoMatchmake_Postpone(client *NEX.Client, AnyGathering NEX.Data, StrMessage string) (rmcResult uint32, JoinedGathering NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSession(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSessionWithHostUrls(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria, ResultRange NEX.ResultRange) (rmcResult uint32, LstGathering []NEX.Data, LstGatheringUrls []NEX.GatheringURLs) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_CreateMatchmakeSession(client *NEX.Client, AnyGathering NEX.Data, StrMessage string, ParticipationCount uint16) (rmcResult uint32, Gid uint32, SessionKey NEX.Buffer) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_JoinMatchmakeSession(client *NEX.Client, Gid uint32, StrMessage string) (rmcResult uint32, SessionKey NEX.Buffer) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_ModifyCurrentGameAttribute(client *NEX.Client, Gid uint32, AttribIndex uint32, NewValue uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateNotificationData(client *NEX.Client, UiType uint32, UiParam1 uint64, UiParam2 uint64, StrParam string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetFriendNotificationData(client *NEX.Client, UiType int32) (rmcResult uint32, DataList []NEX.NotificationEvent) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateApplicationBuffer(client *NEX.Client, Gid uint32, ApplicationBuffer NEX.Buffer) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateMatchmakeSessionAttribute(client *NEX.Client, Gid uint32, Attribs []uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetlstFriendNotificationData(client *NEX.Client, LstTypes []uint32) (rmcResult uint32, DataList []NEX.NotificationEvent) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateMatchmakeSession(client *NEX.Client, AnyGathering NEX.Data) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_AutoMatchmakeWithSearchCriteria_Postpone(client *NEX.Client, LstSearchCriteria []NEX.MatchmakeSessionSearchCriteria, AnyGathering NEX.Data, StrMessage string) (rmcResult uint32, JoinedGathering NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetPlayingSession(client *NEX.Client, LstPid []NEX.PID) (rmcResult uint32, LstPlayingSession []NEX.PlayingSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_CreateCommunity(client *NEX.Client, Community NEX.PersistentGathering, StrMessage string) (rmcResult uint32, Gid uint32) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateCommunity(client *NEX.Client, Community NEX.PersistentGathering) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_JoinCommunity(client *NEX.Client, Gid uint32, StrMessage string, StrPassword string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindCommunityByGatheringId(client *NEX.Client, LstGid []uint32) (rmcResult uint32, LstCommunity []NEX.PersistentGathering) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindOfficialCommunity(client *NEX.Client, IsAvailableOnly bool, ResultRange NEX.ResultRange) (rmcResult uint32, LstCommunity []NEX.PersistentGathering) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindCommunityByParticipant(client *NEX.Client, Pid NEX.PID, ResultRange NEX.ResultRange) (rmcResult uint32, LstCommunity []NEX.PersistentGathering) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdatePrivacySetting(client *NEX.Client, OnlineStatus bool, ParticipationCommunity bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetMyBlockList(client *NEX.Client) (rmcResult uint32, LstPrincipalId []NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_AddToBlockList(client *NEX.Client, LstPrincipalId []NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_RemoveFromBlockList(client *NEX.Client, LstPrincipalId []NEX.PID) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_ClearMyBlockList(client *NEX.Client) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_ReportViolation(client *NEX.Client, Pid NEX.PID, UserName string, ViolationCode uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_IsViolationUser(client *NEX.Client) (rmcResult uint32, Flag bool, Score uint32) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_JoinMatchmakeSessionEx(client *NEX.Client, Gid uint32, StrMessage string, DontCareMyBlockList bool, ParticipationCount uint16) (rmcResult uint32, SessionKey NEX.Buffer) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetSimplePlayingSession(client *NEX.Client, LstPrincipalId []NEX.PID, IncludeLoginUser bool) (rmcResult uint32, LstSimplePlayingSession []NEX.SimplePlayingSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GetSimpleCommunity(client *NEX.Client, GatheringIdList []uint32) (rmcResult uint32, LstSimpleCommunityList []NEX.SimpleCommunity) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_AutoMatchmakeWithGatheringId_Postpone(client *NEX.Client, LstGid []uint32, AnyGathering NEX.Data, StrMessage string) (rmcResult uint32, JoinedGathering NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateProgressScore(client *NEX.Client, Gid uint32, ProgressScore uint8) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_DebugNotifyEvent(client *NEX.Client, Pid NEX.PID, MainType uint32, SubType uint32, Param1 uint64, Param2 uint64, StringParam string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_GenerateMatchmakeSessionSystemPassword(client *NEX.Client, Gid uint32) (rmcResult uint32, Password string) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_ClearMatchmakeSessionSystemPassword(client *NEX.Client, Gid uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_CreateMatchmakeSessionWithParam(client *NEX.Client, CreateMatchmakeSessionParam NEX.CreateMatchmakeSessionParam) (rmcResult uint32, JoinedMatchmakeSession NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_JoinMatchmakeSessionWithParam(client *NEX.Client, JoinMatchmakeSessionParam NEX.JoinMatchmakeSessionParam) (rmcResult uint32, JoinedMatchmakeSession NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_AutoMatchmakeWithParam_Postpone(client *NEX.Client, AutoMatchmakeParam NEX.AutoMatchmakeParam) (rmcResult uint32, JoinedMatchmakeSession NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindMatchmakeSessionByGatheringIdDetail(client *NEX.Client, Gid uint32) (rmcResult uint32, MatchmakeSession NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSessionNoHolder(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria, ResultRange NEX.ResultRange) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolder(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria, ResultRange NEX.ResultRange) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession, LstGatheringUrls []NEX.GatheringURLs) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_UpdateMatchmakeSessionPart(client *NEX.Client, UpdateMatchmakeSessionParam NEX.UpdateMatchmakeSessionParam) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_RequestMatchmaking(client *NEX.Client, AutoMatchmakeParam NEX.AutoMatchmakeParam) (rmcResult uint32, RequestId uint64) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_WithdrawMatchmaking(client *NEX.Client, RequestId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_WithdrawMatchmakingAll(client *NEX.Client) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindMatchmakeSessionByGatheringId(client *NEX.Client, LstGid []uint32) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindMatchmakeSessionBySingleGatheringId(client *NEX.Client, Gid uint32) (rmcResult uint32, MatchmakeSession NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindMatchmakeSessionByOwner(client *NEX.Client, Id NEX.PID, ResultRange NEX.ResultRange) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_FindMatchmakeSessionByParticipant(client *NEX.Client, Param NEX.FindMatchmakeSessionByParticipantParam) (rmcResult uint32, LstSession []NEX.FindMatchmakeSessionByParticipantResult) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSessionNoHolderNoResultRange(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession) {
    rmcResult = 0x80010002
    return
}
func Matchmake_Extension_BrowseMatchmakeSessionWithHostUrlsNoHolderNoResultRange(client *NEX.Client, SearchCriteria NEX.MatchmakeSessionSearchCriteria) (rmcResult uint32, LstMatchmakeSession []NEX.MatchmakeSession, LstGatheringUrls []NEX.GatheringURLs) {
    rmcResult = 0x80010002
    return
}
func Message_Delivery_DeliverMessage(client *NEX.Client, OUserMessage NEX.Data) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Messaging_DeliverMessage(client *NEX.Client, OUserMessage NEX.Data) (rmcResult uint32, OModifiedMessage NEX.Data, LstSandboxNodeId []uint32, LstParticipants []NEX.PID) {
    rmcResult = 0x80010002
    return
}
func Messaging_GetNumberOfMessages(client *NEX.Client, Recipient NEX.MessageRecipient) (rmcResult uint32, UiNbMessages uint32) {
    rmcResult = 0x80010002
    return
}
func Messaging_GetMessagesHeaders(client *NEX.Client, Recipient NEX.MessageRecipient, Range NEX.ResultRange) (rmcResult uint32, LstMsgHeaders []NEX.UserMessage) {
    rmcResult = 0x80010002
    return
}
func Messaging_RetrieveAllMessagesWithinRange(client *NEX.Client, Recipient NEX.MessageRecipient, Range NEX.ResultRange) (rmcResult uint32, LstMessages []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Messaging_RetrieveMessages(client *NEX.Client, Recipient NEX.MessageRecipient, LstMsgIDs []uint32, BLeaveOnServer bool) (rmcResult uint32, LstMessages []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Messaging_DeleteMessages(client *NEX.Client, Recipient NEX.MessageRecipient, LstMessagesToDelete []uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Messaging_DeleteAllMessages(client *NEX.Client, Recipient NEX.MessageRecipient) (rmcResult uint32, UiNbDeletedMessages uint32) {
    rmcResult = 0x80010002
    return
}
func Monitoring_PingDaemon(client *NEX.Client) (rmcResult uint32, returnValue bool) {
    rmcResult = 0x80010002
    return
}
func Monitoring_GetClusterMembers(client *NEX.Client) (rmcResult uint32, StrValues []string) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_RequestProbeInitiation(client *NEX.Client, UrlTargetList []NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_InitiateProbe(client *NEX.Client, UrlStationToProbe NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_RequestProbeInitiationExt(client *NEX.Client, UrlTargetList []NEX.StationURL, UrlStationToProbe NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_ReportNATTraversalResult(client *NEX.Client, Cid uint32, Result bool, Rtt uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_ReportNATProperties(client *NEX.Client, Natmapping uint32, Natfiltering uint32, Rtt uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_GetRelaySignatureKey(client *NEX.Client) (rmcResult uint32, RelayMode int32, CurrentUTCTime NEX.DateTime, Address string, Port uint16, RelayAddressType int32, GameServerID uint32) {
    rmcResult = 0x80010002
    return
}
func NAT_Traversal_ReportNATTraversalResultDetail(client *NEX.Client, Cid uint32, Result bool, Detail int32, Rtt uint32) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Nintendo_Notifications_ProcessNintendoNotificationEvent(client *NEX.Client, EventObject NEX.NintendoNotificationEvent) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Notifications_ProcessNotificationEvent(client *NEX.Client, OEvent NEX.NotificationEvent) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_FindByGroup(client *NEX.Client, UiGroup uint32) (rmcResult uint32, LstTags []string) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_InsertItem(client *NEX.Client, UiGroup uint32, StrTag string, BufData NEX.Buffer, BReplace bool) (rmcResult uint32, BResult bool) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_RemoveItem(client *NEX.Client, UiGroup uint32, StrTag string) (rmcResult uint32, BResult bool) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_GetItem(client *NEX.Client, UiGroup uint32, StrTag string) (rmcResult uint32, BufData NEX.Buffer, BResult bool) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_InsertCustomItem(client *NEX.Client, UiGroup uint32, StrTag string, HData NEX.Data, BReplace bool) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_GetCustomItem(client *NEX.Client, UiGroup uint32, StrTag string) (rmcResult uint32, HData NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Persistent_Store_FindItemsBySQLQuery(client *NEX.Client, UiGroup uint32, StrTag string, StrQuery string) (rmcResult uint32, LstData []NEX.Data) {
    rmcResult = 0x80010002
    return
}
func Ranking_UploadScore(client *NEX.Client, ScoreData NEX.RankingScoreData, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_DeleteScore(client *NEX.Client, Category uint32, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_DeleteAllScores(client *NEX.Client, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_UploadCommonData(client *NEX.Client, CommonData NEX.Buffer, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_DeleteCommonData(client *NEX.Client, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetCommonData(client *NEX.Client, UniqueId uint64) (rmcResult uint32, CommonData NEX.Buffer) {
    rmcResult = 0x80010002
    return
}
func Ranking_ChangeAttributes(client *NEX.Client, Category uint32, ChangeParam NEX.RankingChangeAttributesParam, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_ChangeAllAttributes(client *NEX.Client, ChangeParam NEX.RankingChangeAttributesParam, UniqueId uint64) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetRanking(client *NEX.Client, RankingMode uint8, Category uint32, OrderParam NEX.RankingOrderParam, UniqueId uint64, PrincipalId NEX.PID) (rmcResult uint32, PResult NEX.RankingResult) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetApproxOrder(client *NEX.Client, Category uint32, OrderParam NEX.RankingOrderParam, Score uint32, UniqueId uint64, PrincipalId uint32) (rmcResult uint32, POrder uint32) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetStats(client *NEX.Client, Category uint32, OrderParam NEX.RankingOrderParam, Flags uint32) (rmcResult uint32, PStats NEX.RankingStats) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetRankingByPIDList(client *NEX.Client, PrincipalIdList []NEX.PID, RankingMode uint8, Category uint32, OrderParam NEX.RankingOrderParam, UniqueId uint64) (rmcResult uint32, PResult NEX.RankingResult) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetRankingByUniqueIdList(client *NEX.Client, NexUniqueIdList []uint64, RankingMode uint8, Category uint32, OrderParam NEX.RankingOrderParam, UniqueId uint64) (rmcResult uint32, PResult NEX.RankingResult) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetCachedTopXRanking(client *NEX.Client, Category uint32, OrderParam NEX.RankingOrderParam) (rmcResult uint32, PResult NEX.RankingCachedResult) {
    rmcResult = 0x80010002
    return
}
func Ranking_GetCachedTopXRankings(client *NEX.Client, Categories []uint32, OrderParams []NEX.RankingOrderParam) (rmcResult uint32, PResults []NEX.RankingCachedResult) {
    rmcResult = 0x80010002
    return
}
func Remote_Log_Device_Log(client *NEX.Client, Message string) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
/*func Secure_Connection_Register(client *NEX.Client, VecMyURLs []NEX.StationURL) (rmcResult uint32, returnValue NEX.Result, PidConnectionID uint32, UrlPublic NEX.StationURL) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_RequestConnectionData(client *NEX.Client, CidTarget uint32, PidTarget uint32) (rmcResult uint32, returnValue bool, PvecConnectionsData []NEX.ConnectionData) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_RequestUrls(client *NEX.Client, CidTarget uint32, PidTarget uint32) (rmcResult uint32, returnValue bool, PlstURLs []NEX.StationURL) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_RegisterEx(client *NEX.Client, VecMyURLs []NEX.StationURL, HCustomData NEX.Data) (rmcResult uint32, returnValue NEX.Result, PidConnectionID uint32, UrlPublic NEX.StationURL) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_TestConnectivity(client *NEX.Client) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_UpdateURLs(client *NEX.Client, VecMyURLs []NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_ReplaceURL(client *NEX.Client, Target NEX.StationURL, Url NEX.StationURL) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Secure_Connection_SendReport(client *NEX.Client, ReportId uint32, ReportData NEX.QBuffer) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}*/
func Simple_Authentication_LoginWithTokenEx(client *NEX.Client, StrToken string, PConnectionDataIn NEX.RVConnectionData, OAnyData NEX.Data) (rmcResult uint32, returnValue NEX.Result, PidPrincipal uint32, PConnectionDataOut NEX.RVConnectionData, StrReturnMsg string) {
    rmcResult = 0x80010002
    return
}
func Utility_AcquireNexUniqueId(client *NEX.Client) (rmcResult uint32, PNexUniqueId uint64) {
    rmcResult = 0x80010002
    return
}
func Utility_AcquireNexUniqueIdWithPassword(client *NEX.Client) (rmcResult uint32, PNexUniqueIdInfo NEX.UniqueIdInfo) {
    rmcResult = 0x80010002
    return
}
func Utility_AssociateNexUniqueIdWithMyPrincipalId(client *NEX.Client, UniqueIdInfo NEX.UniqueIdInfo) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Utility_AssociateNexUniqueIdsWithMyPrincipalId(client *NEX.Client, UniqueIdInfo []NEX.UniqueIdInfo) (rmcResult uint32, ) {
    rmcResult = 0x80010002
    return
}
func Utility_GetAssociatedNexUniqueIdWithMyPrincipalId(client *NEX.Client) (rmcResult uint32, PUniqueIdInfo NEX.UniqueIdInfo) {
    rmcResult = 0x80010002
    return
}
func Utility_GetAssociatedNexUniqueIdsWithMyPrincipalId(client *NEX.Client) (rmcResult uint32, PUniqueIdInfo []NEX.UniqueIdInfo) {
    rmcResult = 0x80010002
    return
}
func Utility_GetIntegerSettings(client *NEX.Client, IntegerSettingIndex uint32) (rmcResult uint32, IntegerSettings map[uint16]int32) {
    rmcResult = 0x80010002
    return
}
func Utility_GetStringSettings(client *NEX.Client, StringSettingIndex uint32) (rmcResult uint32, StringSettings map[uint16]string) {
    rmcResult = 0x80010002
    return
}
